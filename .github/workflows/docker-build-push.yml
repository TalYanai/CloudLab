name: Build and Deploy to ACI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: cloudlabacr11103.azurecr.io
        username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

    - name: Build the Docker image
      run: |
        docker build -t cloudlabacr11103.azurecr.io/phonebook-app:latest ./Contacts

    - name: Push the Docker image
      run: |
        docker push cloudlabacr11103.azurecr.io/phonebook-app:latest

  deploy-to-aci:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create container definition JSON
      run: |
        echo '[
          {
            "name": "phonebook-container",
            "image": "cloudlabacr11103.azurecr.io/phonebook-app:latest",
            "resources": {
              "requests": {
                "cpu": 1,
                "memoryInGb": 1.5
              }
            },
            "ports": [
              {
                "port": 80
              }
            ]
          }
        ]' > container-definition.json

    - name: Deploy to Azure Container Instance
      run: |
        az container create \
          --resource-group CLOUDLAB-DEV-RG \
          --name phonebook-container \
          --image cloudlabacr11103.azurecr.io/phonebook-app:latest \
          --registry-login-server cloudlabacr11103.azurecr.io \
          --registry-username ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }} \
          --registry-password ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }} \
          --dns-name-label cloudlab-${{ github.run_number }} \
          --location westeurope \
          --os-type Linux \
          --ports 80 \
          --containers @container-definition.json
